name: CI (Dev default, optional Prod)

on:
  push:
    branches: ['**']          # run on all branches by default (dev flow)
  pull_request:
  workflow_dispatch:          # lets you run it manually as needed


jobs:
  backend-build-test:
    name: Backend • Build & Test (Development)
    runs-on: ubuntu-latest
    env:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        working-directory: ./backend
        run: dotnet restore server.sln

      - name: Build (Debug)
        working-directory: ./backend
        run: dotnet build server.sln --configuration Debug --no-restore

      - name: Publish Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlInline;Cobertura'
        continue-on-error: true
        
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coveragereport

  frontend-build-test-dev:
    name: Frontend • Lint, Test, Build (development)
    runs-on: ubuntu-latest
    needs: backend-build-test
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install
        working-directory: frontend/band-recruiting-app
        run: npm ci

      - name: Lint
        working-directory: frontend/band-recruiting-app
        run: npm run lint --if-present

      - name: Test (Headless)
        working-directory: frontend/band-recruiting-app
        run: npm run test -- --watch=false --no-progress --browsers=ChromeHeadless

      # Safety net: if environment.ts is missing in CI, create a minimal dev one
      - name: Ensure dev environment.ts
        working-directory: frontend/band-recruiting-app
        run: |
          if [ ! -f src/environments/environment.ts ]; then
            mkdir -p src/environments
            printf "%s\n" \
              "export const environment = {" \
              "  production: false," \
              "  apiBaseUrl: 'http://localhost:5001'" \
              "};" > src/environments/environment.ts
                  fi

      - name: Build (development)
        working-directory: frontend/band-recruiting-app
        run: npm run build -- --configuration development

      - name: Upload Dev Dist
        uses: actions/upload-artifact@v4
        with:
          name: angular-dev-dist
          path: frontend/band-recruiting-app/dist

  # Optional PROD build (runs on tags like v1.2.3 or manual dispatch)
  frontend-build-prod:
    name: Frontend • Build (production) [optional]
    runs-on: ubuntu-latest
    needs: frontend-build-test-dev
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install
        working-directory: frontend/band-recruiting-app
        run: npm ci

      - name: Create environment.prod.ts
        working-directory: frontend/band-recruiting-app
        run: |
          mkdir -p src/environments
          cat > src/environments/environment.prod.ts << 'EOF'
          export const environment = {
            production: true,
            apiBaseUrl: '${{ secrets.FRONTEND_API_BASE_URL }}'
          };
          EOF

      - name: Build (production)
        working-directory: frontend/band-recruiting-app
        run: npm run build -- --configuration production

      - name: Upload Prod Dist
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: frontend/band-recruiting-app/dist
